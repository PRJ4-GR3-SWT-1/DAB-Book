// <auto-generated />
using System;
using EFModels.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFModels.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("EFModels.Models.Author", b =>
                {
                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("ImageUrl");

                    b.HasKey("FirstName", "LastName");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("EFModels.Models.Book", b =>
                {
                    b.Property<int>("Isbn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<DateTime>("PublishedOn");

                    b.Property<string>("Title");

                    b.Property<float>("price");

                    b.Property<string>("type")
                        .IsRequired();

                    b.HasKey("Isbn");

                    b.ToTable("Book");

                    b.HasDiscriminator<string>("type").HasValue("book");
                });

            modelBuilder.Entity("EFModels.Models.BookAuthors", b =>
                {
                    b.Property<int>("BookAuthorsId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthorFirstName");

                    b.Property<string>("AuthorLastName");

                    b.Property<int>("BookIsbn");

                    b.HasKey("BookAuthorsId");

                    b.HasIndex("BookIsbn");

                    b.HasIndex("AuthorFirstName", "AuthorLastName");

                    b.ToTable("BookAuthors");
                });

            modelBuilder.Entity("EFModels.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BookIsbn");

                    b.Property<string>("Comment");

                    b.Property<int>("NumStars");

                    b.Property<string>("Votername");

                    b.HasKey("Id");

                    b.HasIndex("BookIsbn");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("EFModels.Models.PriceOffer", b =>
                {
                    b.HasBaseType("EFModels.Models.Book");

                    b.Property<float>("NewPrice");

                    b.Property<string>("PromotionText");

                    b.HasDiscriminator().HasValue("PriceOffer");
                });

            modelBuilder.Entity("EFModels.Models.BookAuthors", b =>
                {
                    b.HasOne("EFModels.Models.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookIsbn")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFModels.Models.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorFirstName", "AuthorLastName");
                });

            modelBuilder.Entity("EFModels.Models.Review", b =>
                {
                    b.HasOne("EFModels.Models.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookIsbn")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
